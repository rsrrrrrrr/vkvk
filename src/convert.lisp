(in-package :vkvk)

;;struct type
(def-struct-translator vk-allocation-callback
  (user-data vk-vpointer)
  (fn-allocation vk-allocation-function)
  (fn-reallocation vk-reallocation-function)
  (fn-free vk-free-function)
  (fn-internal-allocation vk-internal-allocation-notification)
  (fn-internal-free vk-internal-free-notification))

(defctype vk-p-allocator (:pointer (:struct vk-allocation-callback)))

(def-struct-translator vk-debug-report-callback-create-info-ext
    (s-debug-report-callback-create-info debug-report-callback-create-info)
  (type VkStructureType)
  (next vk-vpointer)
  (flags vk-flags)
  (pfn-callback pfn-vk-debug-report-callback-ext)
  (user-data vk-vpointer))

(def-struct-translator vk-offset-2d
    (s-offset-2d offset-2d)
  (x :uint32)
  (y :uint32))

(def-struct-translator vk-offset-3d
    (s-offset-3d offset-3d)
  (x :uint32)
  (y :uint32)
  (z :uint32))

(def-struct-translator vk-extent-2d
    (s-extent-2d extent-2d)
  (width :uint32)
  (height :uint32))

(def-struct-translator vk-extent-3d
    (s-extent-3d extent-3d)
  (width :uint32)
  (height :uint32)
  (depth :uint32))

(def-struct-translator vk-rect-2d
    (s-rect-2d rect-2d)
  (offset (:struct vk-offset-2d))
  (extent (:struct vk-extent-2d)))

(def-struct-translator vk-layer-properties
    (s-layer-properties layper-properties)
  (layer-name :char :count 255)
  (spec-version :uint32)
  (implementation-version :uint32)
  (description :char :count 255))

(def-struct-translator vk-application-info
    (s-application-info application-info)
  (type VkStructureType)
  (next vk-vpointer)
  (application-name (:pointer :char))
  (application-version :uint32)
  (engine-name (:pointer :char))
  (engine-version :uint32)
  (api-version :uint32))

(def-struct-translator vk-instance-create-info
    (s-instance-create-info instance-create-info)
  (type VkStructureType)
  (next vk-vpointer)
  (flags vk-flags)
  (application-info (:pointer (:struct vk-application-info)))
  (enable-layer-count :uint32)
  (enable-layer-names (:pointer (:pointer :char)))
  (enable-extension-count :uint32)
  (enable-extension-names (:pointer (:pointer :char))))

;;get struct
(def-struct-translator vk-physical-device-limits
    (s-physical-device-limits physical-device-limits)
  (max-image-dimension1-d :uint32)
  (max-image-dimension2-d :uint32)
  (max-image-dimension3-d :uint32)
  (max-image-dimension-cube :uint32)
  (max-image-array-layers :uint32)
  (max-texel-buffer-elements :uint32)
  (max-uniform-buffer-range :uint32)
  (max-storage-buffer-range :uint32)
  (max-push-constants-size :uint32)
  (max-memory-allocation-count :uint32)
  (max-sampler-allocation-count :uint32)
  (buffer-image-granularity vk-device-size)
  (sparse-address-space-size vk-device-size)
  (max-bound-descriptor-sets :uint32)
  (max-per-stage-descriptor-samplers :uint32)
  (max-per-stage-descriptor-uniform-buffers :uint32)
  (max-per-stage-descriptor-storage-buffers :uint32)
  (max-per-stage-descriptor-sampled-images :uint32)
  (max-per-stage-descriptor-storage-images :uint32)
  (max-per-stage-descriptor-input-attachments :uint32)
  (max-per-stage-resources :uint32)
  (max-descriptor-set-samplers :uint32)
  (max-descriptor-set-uniform-buffers :uint32)
  (max-descriptor-set-uniform-buffers-dynamic :uint32)
  (max-descriptor-set-storage-buffers :uint32)
  (max-descriptor-set-storage-buffers-dynamic :uint32)
  (max-descriptor-set-sampled-images :uint32)
  (max-descriptor-set-storage-images :uint32)
  (max-descriptor-set-input-attachments :uint32)
  (max-vertex-input-attributes :uint32)
  (max-vertex-input-bindings :uint32)
  (max-vertex-input-attribute-offset :uint32)
  (max-vertex-input-binding-stride :uint32)
  (max-vertex-output-components :uint32)
  (max-tessellation-generation-level :uint32)
  (max-tessellation-patch-size :uint32)
  (max-tessellation-control-per-vertex-input-components :uint32)
  (max-tessellation-control-per-vertex-output-components :uint32)
  (max-tessellation-control-per-patch-output-components :uint32)
  (max-tessellation-control-total-output-components :uint32)
  (max-tessellation-evaluation-input-components :uint32)
  (max-tessellation-evaluation-output-components :uint32)
  (max-geometry-shader-invocations :uint32)
  (max-geometry-input-components :uint32)
  (max-geometry-output-components :uint32)
  (max-geometry-output-vertices :uint32)
  (max-geometry-total-output-components :uint32)
  (max-fragment-input-components :uint32)
  (max-fragment-output-attachments :uint32)
  (max-fragment-dual-src-attachments :uint32)
  (max-fragment-combined-output-resources :uint32)
  (max-compute-shared-memory-size :uint32)
  (max-compute-work-group-count (:pointer :uint32))
  (max-compute-work-group-invocations :uint32)
  (max-compute-work-group-size (:pointer :uint32))
  (sub-pixel-precision-bits :uint32)
  (sub-texel-precision-bits :uint32)
  (mipmap-precision-bits :uint32)
  (max-draw-indexed-index-value :uint32)
  (max-draw-indirect-count :uint32)
  (max-sampler-lod-bias :float)
  (max-sampler-anisotropy :float)
  (max-viewports :uint32)
  (max-viewport-dimensions (:pointer :uint32))
  (viewport-bounds-range (:pointer :float))
  (viewport-sub-pixel-bits :uint32)
  (min-memory-map-alignment :unsigned-int)
  (min-texel-buffer-offset-alignment vk-device-size)
  (min-uniform-buffer-offset-alignment vk-device-size)
  (min-storage-buffer-offset-alignment vk-device-size)
  (min-texel-offset :int32)
  (max-texel-offset :uint32)
  (min-texel-gather-offset :int32)
  (max-texel-gather-offset :uint32)
  (min-interpolation-offset :float)
  (max-interpolation-offset :float)
  (sub-pixel-interpolation-offset-bits :uint32)
  (max-framebuffer-width :uint32)
  (max-framebuffer-height :uint32)
  (max-framebuffer-layers :uint32)
  (framebuffer-color-sample-counts vk-flags)
  (framebuffer-depth-sample-counts vk-flags)
  (framebuffer-stencil-sample-counts vk-flags)
  (framebuffer-no-attachments-sample-counts vk-flags)
  (max-color-attachments :uint32)
  (sampled-image-color-sample-counts vk-flags)
  (sampled-image-integer-sample-counts vk-flags)
  (sampled-image-depth-sample-counts vk-flags)
  (sampled-image-stencil-sample-counts vk-flags)
  (storage-image-sample-counts vk-flags)
  (max-sample-mask-words :uint32)
  (timestamp-compute-and-graphics vk-bool-32)
  (timestamp-period :float)
  (max-clip-distances :uint32)
  (max-cull-distances :uint32)
  (max-combined-clip-and-cull-distances :uint32)
  (discrete-queue-priorities :uint32)
  (point-size-range (:pointer :float))
  (line-width-range (:pointer :float))
  (point-size-granularity :float)
  (line-width-granularity :float)
  (strict-lines vk-bool-32)
  (standard-sample-locations vk-bool-32)
  (optimal-buffer-copy-offset-alignment vk-device-size)
  (optimal-buffer-copy-row-pitch-alignment vk-device-size)
  (non-coherent-atom-size vk-device-size))

(def-struct-translator vk-physical-device-sparse-properties
    (s-physical-device-sparse-properties physical-device-sparse-properties)
  (residency-standard2-d-block-shape vk-bool-32)
  (residency-standard2-d-multisample-block-shape vk-bool-32)
  (residency-standard3-d-block-shape vk-bool-32)
  (residency-aligned-mip-size vk-bool-32)
  (residency-non-resident-strict vk-bool-32))

(def-struct-translator vk-physical-device-properties
    (s-physical-device-properties physical-device-properties)
  (api-version :uint32)
  (driver-version :uint32)
  (vendor-id :uint32)
  (device-id :uint32)
  (device-type VkPhysicalDeviceType)
  (device-name :char :count 256)
  (pipeline-cache-uuid :uint8 :count 16)
  (limits (:struct vk-physical-device-limits))
  (spare-properties (:struct vk-physical-device-sparse-properties)))

(def-struct-translator vk-queue-family-properties
    (s-queue-family-properties queue-family-properties)
  (queue-flags vk-flags)
  (queue-count :uint32)
  (timestamp-valid-bits  :uint32)
  (min-image-transfer-granularity (:struct vk-extent-3d)))

(def-struct-translator vk-memory-type
    (s-memory-type memory-type)
  (property-flags vk-flags)
  (hape-index :uint32))

(def-struct-translator vk-memory-heap
    (s-memory-heap memory-heap)
  (size vk-device-size)
  (flags vk-flags))

(def-struct-translator vk-physical-device-memory-properties
    (s-physical-device-memory-properties physical-device-memory-properties)
  (memory-type-count :uint32)
  (memory-types (:struct vk-memory-type) :count 32) 
  (memory-heap-count :uint32)
  (memory-heaps (:struct vk-memory-heap) :count 16))
