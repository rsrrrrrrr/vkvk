(in-package :vkvk)

;;basic type
(defctype vk-bool-32 :uint32)
(defctype vk-flags :uint32)
(defctype vk-vpointer (:pointer :void))
(defctype vk-p-allocator (:pointer (:struct vk-allocation-callback)))

(defctype vk-handle :pointer)
#.(if (= 8 (foreign-type-size :pointer))
    `(defctype vk-non-dispatch-handle :pointer)
    `(defctype vk-non-dispatch-handle :uint64))

(defctype vk-instance vk-handle)
(defctype vk-physical-device vk-handle)
(defctype vk-device vk-handle)
(defctype vk-queue vk-handle)
(defctype vk-command-buffer vk-handle)

(defctype vk-command-pool vk-non-dispatch-handle)
(defctype vk-fence vk-non-dispatch-handle)
(defctype vk-semaphore vk-non-dispatch-handle)
(defctype vk-event vk-non-dispatch-handle)
(defctype vk-render-pass vk-non-dispatch-handle)
(defctype vk-framebuffer vk-non-dispatch-handle)
(defctype vk-shader-module vk-non-dispatch-handle)
(defctype vk-validation-cache-ext vk-non-dispatch-handle)
(defctype vk-pipeline vk-non-dispatch-handle)
(defctype vk-pipeline-cache vk-non-dispatch-handle)
(defctype vk-device-memory vk-non-dispatch-handle)
(defctype vk-buffer vk-non-dispatch-handle)
(defctype vk-buffer-view vk-non-dispatch-handle)
(defctype vk-image vk-non-dispatch-handle)
(defctype vk-image-view vk-non-dispatch-handle)
(defctype vk-acceleration-structure-khr vk-non-dispatch-handle)
(defctype vk-sampler vk-non-dispatch-handle)
(defctype vk-sampler-ycbcr-conversion vk-non-dispatch-handle)
(defctype vk-descriptor-set-layout vk-non-dispatch-handle)
(defctype vk-pipeline-layout vk-non-dispatch-handle)
(defctype vk-descriptor-pool vk-non-dispatch-handle)
(defctype vk-descriptor-set vk-non-dispatch-handle)
(defctype vk-descriptor-update-template vk-non-dispatch-handle)
(defctype vk-query-pool vk-non-dispatch-handle)
(defctype vk-performance-configuration-intel vk-non-dispatch-handle)
(defctype vk-indirect-commands-layout-nv vk-non-dispatch-handle)
(defctype vk-surface-khr vk-non-dispatch-handle)
(defctype vk-display-khr vk-non-dispatch-handle)
(defctype vk-display-mode-khr vk-non-dispatch-handle)
(defctype vk-swapchain-khr vk-non-dispatch-handle)
(defctype vk-deferred-operation-khr vk-non-dispatch-handle)
(defctype vk-private-date-slot-ext vk-non-dispatch-handle)
(defctype vk-debug-utils-messenger-ext vk-non-dispatch-handle)
(defctype vk-debug-report-callback-ext vk-non-dispatch-handle)

(defctype vk-device-size :uint64)
(defctype vk-device-address :uint64)
(defctype vk-sample-mask :uint32)

(defctype vk-void-function :pointer)
(defctype vk-allocation-function :pointer)
(defctype vk-reallocation-function :pointer)
(defctype vk-free-function :pointer)
(defctype vk-internal-allocation-notification :pointer)
(defctype vk-internal-free-notification :pointer)
(defctype pfn-vk-debug-utils-messenger-callback-ext :pointer)
(defctype pfn-vk-debug-report-callback-ext :pointer)

;;struct type
(defcstruct vk-allocation-callback
  (user-data vk-vpointer)
  (fn-allocation vk-allocation-function)
  (fn-reallocation vk-reallocation-function)
  (fn-free vk-free-function)
  (fn-internal-allocation vk-internal-allocation-notification)
  (fn-internal-free vk-internal-free-notification))

(defcstruct vk-layer-properties
  (layer-name :char :count 255)
  (spec-version :uint32)
  (implementation-version :uint32)
  (description :char :count 255))

(defcstruct vk-application-info
  (type VkStructureType)
  (next vk-vpointer)
  (application-name :string)
  (application-version :uint32)
  (engine-name :string)
  (engine-version :uint32)
  (api-version :uint32))

(defcstruct vk-instance-create-info
  (type VkStructureType)
  (next vk-vpointer)
  (flags vk-flags)
  (application-info (:pointer (:struct vk-application-info)))
  (enable-layer-count :uint32)
  (enable-layer-names (:pointer :string))
  (enable-extension-count :uint32)
  (enable-extension-names (:pointer :string)))
