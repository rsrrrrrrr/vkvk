(in-package :vkvk)

;;basic type
(defctype vk-bool-32 :uint32)
(defctype vk-flags :uint32)
(defctype vk-vpointer (:pointer :void))


(defctype vk-handle :pointer)
#.(if (= 8 (foreign-type-size :pointer))
    `(defctype vk-non-dispatch-handle :pointer)
    `(defctype vk-non-dispatch-handle :uint64))

(defctype vk-instance vk-handle)
(defctype vk-physical-device vk-handle)
(defctype vk-device vk-handle)
(defctype vk-queue vk-handle)
(defctype vk-command-buffer vk-handle)

(defctype vk-command-pool vk-non-dispatch-handle)
(defctype vk-fence vk-non-dispatch-handle)
(defctype vk-semaphore vk-non-dispatch-handle)
(defctype vk-event vk-non-dispatch-handle)
(defctype vk-render-pass vk-non-dispatch-handle)
(defctype vk-framebuffer vk-non-dispatch-handle)
(defctype vk-shader-module vk-non-dispatch-handle)
(defctype vk-validation-cache-ext vk-non-dispatch-handle)
(defctype vk-pipeline vk-non-dispatch-handle)
(defctype vk-pipeline-cache vk-non-dispatch-handle)
(defctype vk-device-memory vk-non-dispatch-handle)
(defctype vk-buffer vk-non-dispatch-handle)
(defctype vk-buffer-view vk-non-dispatch-handle)
(defctype vk-image vk-non-dispatch-handle)
(defctype vk-image-view vk-non-dispatch-handle)
(defctype vk-acceleration-structure-khr vk-non-dispatch-handle)
(defctype vk-sampler vk-non-dispatch-handle)
(defctype vk-sampler-ycbcr-conversion vk-non-dispatch-handle)
(defctype vk-descriptor-set-layout vk-non-dispatch-handle)
(defctype vk-pipeline-layout vk-non-dispatch-handle)
(defctype vk-descriptor-pool vk-non-dispatch-handle)
(defctype vk-descriptor-set vk-non-dispatch-handle)
(defctype vk-descriptor-update-template vk-non-dispatch-handle)
(defctype vk-query-pool vk-non-dispatch-handle)
(defctype vk-performance-configuration-intel vk-non-dispatch-handle)
(defctype vk-indirect-commands-layout-nv vk-non-dispatch-handle)
(defctype vk-surface-khr vk-non-dispatch-handle)
(defctype vk-display-khr vk-non-dispatch-handle)
(defctype vk-display-mode-khr vk-non-dispatch-handle)
(defctype vk-swapchain-khr vk-non-dispatch-handle)
(defctype vk-deferred-operation-khr vk-non-dispatch-handle)
(defctype vk-private-date-slot-ext vk-non-dispatch-handle)
(defctype vk-debug-utils-messenger-ext vk-non-dispatch-handle)
(defctype vk-debug-report-callback-ext vk-non-dispatch-handle)

(defctype vk-device-size :uint64)
(defctype vk-device-address :uint64)
(defctype vk-sample-mask :uint32)

(defctype vk-void-function :pointer)
(defctype vk-allocation-function :pointer)
(defctype vk-reallocation-function :pointer)
(defctype vk-free-function :pointer)
(defctype vk-internal-allocation-notification :pointer)
(defctype vk-internal-free-notification :pointer)
(defctype pfn-vk-debug-utils-messenger-callback-ext :pointer)
(defctype pfn-vk-debug-report-callback-ext :pointer)

;;struct type
(defcstruct vk-allocation-callback
  (user-data vk-vpointer)
  (fn-allocation vk-allocation-function)
  (fn-reallocation vk-reallocation-function)
  (fn-free vk-free-function)
  (fn-internal-allocation vk-internal-allocation-notification)
  (fn-internal-free vk-internal-free-notification))

(defctype vk-p-allocator (:pointer (:struct vk-allocation-callback)))

(defcstruct vk-offset-2d
  (x :uint32)
  (y :uint32))

(defcstruct vk-offset-3d
  (x :uint32)
  (y :uint32)
  (z :uint32))

(defcstruct vk-extent-2d
  (width :uint32)
  (height :uint32))

(defcstruct vk-extent-3d
  (width :uint32)
  (height :uint32)
  (depth :uint32))

(defcstruct vk-rect-2d
  (offset (:struct vk-offset-2d))
  (extent (:struct vk-extent-2d)))

(defcstruct vk-layer-properties
  (layer-name :char :count 255)
  (spec-version :uint32)
  (implementation-version :uint32)
  (description :char :count 255))

(defcstruct vk-application-info
  (type VkStructureType)
  (next vk-vpointer)
  (application-name :string)
  (application-version :uint32)
  (engine-name :string)
  (engine-version :uint32)
  (api-version :uint32))

(defcstruct vk-instance-create-info
  (type VkStructureType)
  (next vk-vpointer)
  (flags vk-flags)
  (application-info (:pointer (:struct vk-application-info)))
  (enable-layer-count :uint32)
  (enable-layer-names (:pointer :string))
  (enable-extension-count :uint32)
  (enable-extension-names (:pointer :string)))

;;get struct
(defcstruct vk-physical-device-limits
  (max-image-dimension1-d :uint32)
  (max-image-dimension2-d :uint32)
  (max-image-dimension3-d :uint32)
  (max-image-dimension-cube :uint32)
  (max-image-array-layers :uint32)
  (max-texel-buffer-elements :uint32)
  (max-uniform-buffer-range :uint32)
  (max-storage-buffer-range :uint32)
  (max-push-constants-size :uint32)
  (max-memory-allocation-count :uint32)
  (max-sampler-allocation-count :uint32)
  (buffer-image-granularity vk-device-size)
  (sparse-address-space-size vk-device-size)
  (max-bound-descriptor-sets :uint32)
  (max-per-stage-descriptor-samplers :uint32)
  (max-per-stage-descriptor-uniform-buffers :uint32)
  (max-per-stage-descriptor-storage-buffers :uint32)
  (max-per-stage-descriptor-sampled-images :uint32)
  (max-per-stage-descriptor-storage-images :uint32)
  (max-per-stage-descriptor-input-attachments :uint32)
  (max-per-stage-resources :uint32)
  (max-descriptor-set-samplers :uint32)
  (max-descriptor-set-uniform-buffers :uint32)
  (max-descriptor-set-uniform-buffers-dynamic :uint32)
  (max-descriptor-set-storage-buffers :uint32)
  (max-descriptor-set-storage-buffers-dynamic :uint32)
  (max-descriptor-set-sampled-images :uint32)
  (max-descriptor-set-storage-images :uint32)
  (max-descriptor-set-input-attachments :uint32)
  (max-vertex-input-attributes :uint32)
  (max-vertex-input-bindings :uint32)
  (max-vertex-input-attribute-offset :uint32)
  (max-vertex-input-binding-stride :uint32)
  (max-vertex-output-components :uint32)
  (max-tessellation-generation-level :uint32)
  (max-tessellation-patch-size :uint32)
  (max-tessellation-control-per-vertex-input-components :uint32)
  (max-tessellation-control-per-vertex-output-components :uint32)
  (max-tessellation-control-per-patch-output-components :uint32)
  (max-tessellation-control-total-output-components :uint32)
  (max-tessellation-evaluation-input-components :uint32)
  (max-tessellation-evaluation-output-components :uint32)
  (max-geometry-shader-invocations :uint32)
  (max-geometry-input-components :uint32)
  (max-geometry-output-components :uint32)
  (max-geometry-output-vertices :uint32)
  (max-geometry-total-output-components :uint32)
  (max-fragment-input-components :uint32)
  (max-fragment-output-attachments :uint32)
  (max-fragment-dual-src-attachments :uint32)
  (max-fragment-combined-output-resources :uint32)
  (max-compute-shared-memory-size :uint32)
  (max-compute-work-group-count (:pointer :uint32))
  (max-compute-work-group-invocations :uint32)
  (max-compute-work-group-size (:pointer :uint32))
  (sub-pixel-precision-bits :uint32)
  (sub-texel-precision-bits :uint32)
  (mipmap-precision-bits :uint32)
  (max-draw-indexed-index-value :uint32)
  (max-draw-indirect-count :uint32)
  (max-sampler-lod-bias :float)
  (max-sampler-anisotropy :float)
  (max-viewports :uint32)
  (max-viewport-dimensions (:pointer :uint32))
  (viewport-bounds-range (:pointer :float))
  (viewport-sub-pixel-bits :uint32)
  (min-memory-map-alignment :unsigned-int)
  (min-texel-buffer-offset-alignment vk-device-size)
  (min-uniform-buffer-offset-alignment vk-device-size)
  (min-storage-buffer-offset-alignment vk-device-size)
  (min-texel-offset :int32)
  (max-texel-offset :uint32)
  (min-texel-gather-offset :int32)
  (max-texel-gather-offset :uint32)
  (min-interpolation-offset :float)
  (max-interpolation-offset :float)
  (sub-pixel-interpolation-offset-bits :uint32)
  (max-framebuffer-width :uint32)
  (max-framebuffer-height :uint32)
  (max-framebuffer-layers :uint32)
  (framebuffer-color-sample-counts vk-flags)
  (framebuffer-depth-sample-counts vk-flags)
  (framebuffer-stencil-sample-counts vk-flags)
  (framebuffer-no-attachments-sample-counts vk-flags)
  (max-color-attachments :uint32)
  (sampled-image-color-sample-counts vk-flags)
  (sampled-image-integer-sample-counts vk-flags)
  (sampled-image-depth-sample-counts vk-flags)
  (sampled-image-stencil-sample-counts vk-flags)
  (storage-image-sample-counts vk-flags)
  (max-sample-mask-words :uint32)
  (timestamp-compute-and-graphics vk-bool-32)
  (timestamp-period :float)
  (max-clip-distances :uint32)
  (max-cull-distances :uint32)
  (max-combined-clip-and-cull-distances :uint32)
  (discrete-queue-priorities :uint32)
  (point-size-range (:pointer :float))
  (line-width-range (:pointer :float))
  (point-size-granularity :float)
  (line-width-granularity :float)
  (strict-lines vk-bool-32)
  (standard-sample-locations vk-bool-32)
  (optimal-buffer-copy-offset-alignment vk-device-size)
  (optimal-buffer-copy-row-pitch-alignment vk-device-size)
  (non-coherent-atom-size vk-device-size))

(defcstruct vk-physical-device-sparse-properties
  (residency-standard2-d-block-shape vk-bool-32)
  (residency-standard2-d-multisample-block-shape vk-bool-32)
  (residency-standard3-d-block-shape vk-bool-32)
  (residency-aligned-mip-size vk-bool-32)
  (residency-non-resident-strict vk-bool-32))

(defcstruct vk-physical-device-properties
  (api-version :uint32)
  (driver-version :uint32)
  (vendor-id :uint32)
  (device-id :uint32)
  (device-type VkPhysicalDeviceType)
  (device-name :char :count 256)
  (pipeline-cache-uuid :uint8 :count 16)
  (limits (:struct vk-physical-device-limits))
  (spare-properties (:struct vk-physical-device-sparse-properties)))

(defcstruct vk-queue-family-properties
  (queue-flags vk-flags)
  (queue-count :uint32)
  (timestamp-valid-bits  :uint32)
  (min-image-transfer-granularity (:struct vk-extent-3d)))

(defcstruct vk-memory-type
  (property-flags vk-flags)
  (hape-index :uint32))

(defcstruct vk-memory-heap
  (size vk-device-size)
  (flags vk-flags))

(defcstruct vk-physical-device-memory-properties
  (memory-type-count :uint32)
  (memory-types (:struct vk-memory-type) :count 32) 
  (memory-heap-count :uint32)
  (memory-heaps (:struct vk-memory-heap) :count 16))
